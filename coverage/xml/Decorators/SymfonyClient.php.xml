<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="SymfonyClient.php" path="/Decorators">
    <totals>
      <lines total="244" comments="46" code="198" executable="60" executed="32" percent="53.33"/>
      <methods count="21" tested="8" percent="38.10"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Neo4j\Neo4jBundle\Decorators\SymfonyClient" start="30" executable="60" executed="32" crap="128.67">
      <namespace name="Neo4j\Neo4jBundle\Decorators"/>
      <method name="__construct" signature="__construct(Laudis\Neo4j\Common\DriverSetupManager $driverSetups, Laudis\Neo4j\Databags\SessionConfiguration $defaultSessionConfiguration, Laudis\Neo4j\Databags\TransactionConfiguration $defaultTransactionConfiguration, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory)" start="47" end="53" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getDefaultSessionConfiguration" signature="getDefaultSessionConfiguration(): Laudis\Neo4j\Databags\SessionConfiguration" start="55" end="58" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getDefaultTransactionConfiguration" signature="getDefaultTransactionConfiguration(): Laudis\Neo4j\Databags\TransactionConfiguration" start="60" end="63" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="run" signature="run(string $statement, iterable $parameters, ?string $alias): Laudis\Neo4j\Databags\SummarizedResult" start="65" end="68" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="runStatement" signature="runStatement(Laudis\Neo4j\Databags\Statement $statement, ?string $alias): Laudis\Neo4j\Databags\SummarizedResult" start="70" end="73" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getRunner" signature="getRunner(?string $alias): \Neo4j\Neo4jBundle\Decorators\SymfonyTransaction|\Neo4j\Neo4jBundle\Decorators\SymfonySession" start="75" end="87" crap="3.07" executable="5" executed="4" coverage="80"/>
      <method name="getSession" signature="getSession(?string $alias): Neo4j\Neo4jBundle\Decorators\SymfonySession" start="89" end="98" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="runStatements" signature="runStatements(iterable $statements, ?string $alias): Laudis\Neo4j\Types\CypherList" start="100" end="108" crap="2.06" executable="4" executed="3" coverage="75"/>
      <method name="beginTransaction" signature="beginTransaction(?iterable $statements, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction" start="110" end="116" crap="2" executable="3" executed="0" coverage="0"/>
      <method name="getDriver" signature="getDriver(?string $alias): Neo4j\Neo4jBundle\Decorators\SymfonyDriver" start="118" end="125" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="startSession" signature="startSession(?string $alias, Laudis\Neo4j\Databags\SessionConfiguration $configuration): Neo4j\Neo4jBundle\Decorators\SymfonySession" start="127" end="135" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="writeTransaction" signature="writeTransaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): mixed" start="144" end="154" crap="2.26" executable="5" executed="3" coverage="60"/>
      <method name="readTransaction" signature="readTransaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): mixed" start="163" end="173" crap="6" executable="5" executed="0" coverage="0"/>
      <method name="transaction" signature="transaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)" start="182" end="185" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="verifyConnectivity" signature="verifyConnectivity(?string $driver): bool" start="187" end="190" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="hasDriver" signature="hasDriver(string $alias): bool" start="192" end="195" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="bindTransaction" signature="bindTransaction(?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): void" start="197" end="203" crap="2" executable="3" executed="0" coverage="0"/>
      <method name="rollbackBoundTransaction" signature="rollbackBoundTransaction(?string $alias, int $depth): void" start="205" end="208" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="popTransactions" signature="popTransactions(callable $handler, ?string $alias, int $depth): void" start="215" end="228" crap="20" executable="7" executed="0" coverage="0"/>
      <method name="commitBoundTransaction" signature="commitBoundTransaction(?string $alias, int $depth): void" start="230" end="233" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="getTsxConfig" signature="getTsxConfig(?Laudis\Neo4j\Databags\TransactionConfiguration $config): Laudis\Neo4j\Databags\TransactionConfiguration" start="235" end="242" crap="2.15" executable="3" executed="2" coverage="66.666666666667"/>
    </class>
    <coverage>
      <line nr="53">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testClient"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultSessionConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultTransactionConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testPriority"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="57">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultSessionConfig"/>
      </line>
      <line nr="62">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultTransactionConfig"/>
      </line>
      <line nr="67">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="72">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="77">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="80">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="81">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="86">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="91">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="93">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="94">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="97">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="102">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="103">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="104">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testRunStatement"/>
      </line>
      <line nr="120">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
      </line>
      <line nr="121">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
      </line>
      <line nr="122">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
      </line>
      <line nr="123">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
      </line>
      <line nr="129">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="130">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="132">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="133">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="146">
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="147">
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="153">
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="237">
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="241">
        <covered by="Neo4j\Neo4jBundle\Tests\Decorators\SymfonyClientTest::testWriteTransaction"/>
      </line>
      <line nr="124">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
      </line>
      <line nr="131">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
      <line nr="134">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Neo4j\Neo4jBundle\Decorators</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Basic\Driver</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Common\DriverSetupManager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Contracts\ClientInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Contracts\SessionInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Contracts\UnmanagedTransactionInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Databags\SessionConfiguration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Databags\Statement</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Databags\SummarizedResult</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Databags\TransactionConfiguration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Enum\AccessMode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Types\CypherList</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Types\CypherMap</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * A collection of drivers with methods to run queries though them.</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> * @implements ClientInterface&lt;SummarizedResult&lt;CypherMap&gt;&gt;</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> * @psalm-external-mutation-free</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * @psalm-suppress ImpureMethodCall</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="30">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonyClient</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ClientInterface</token>
      </line>
      <line no="31">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, list&lt;SymfonyTransaction&gt;&gt;</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$boundTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, SymfonySession&gt;</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$boundSessions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41"/>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * @psalm-mutation-free</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @param DriverSetupManager&lt;mixed&gt; $driverSetups</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DriverSetupManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$driverSetups</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SessionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$defaultSessionConfiguration</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$defaultTransactionConfiguration</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonyDriverFactory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$factory</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDefaultSessionConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SessionConfiguration</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDefaultTransactionConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TransactionConfiguration</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultTransactionConfiguration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">run</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">iterable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parameters</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SummarizedResult</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">runStatement</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Statement</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parameters</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">runStatement</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Statement</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SummarizedResult</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">runStatements</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRunner</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonyTransaction</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">SymfonySession</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE_EQUAL">??=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultAlias</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">array_key_last</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonySession</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE_EQUAL">??=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultAlias</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundSessions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundSessions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundSessions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">startSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">runStatements</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">iterable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CypherList</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$runner</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRunner</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$runner</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SessionInterface</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$runner</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">runStatements</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultTransactionConfiguration</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$runner</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">runStatements</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">beginTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">iterable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonyTransaction</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTsxConfig</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114"/>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">beginTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117"/>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDriver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonyDriver</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">factory</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createDriver</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Driver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDriver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultAlias</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">startSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SessionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$configuration</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonySession</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">factory</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createSession</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">            </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Driver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDriver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$configuration</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultAlias</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="136"/>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">     * @template HandlerResult</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     * @param callable(SymfonyTransaction):HandlerResult $tsxHandler</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     * @return HandlerResult</token>
      </line>
      <line no="143">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">writeTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsxHandler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAccessMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AccessMode</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">WRITE</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$sessionConfig</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">withAccessMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">AccessMode</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">WRITE</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">startSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sessionConfig</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">writeTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tsxHandler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTsxConfig</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="155"/>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     * @template HandlerResult</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="159">
        <token name="T_DOC_COMMENT">     * @param callable(SymfonyTransaction):HandlerResult $tsxHandler</token>
      </line>
      <line no="160">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     * @return HandlerResult</token>
      </line>
      <line no="162">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">readTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsxHandler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAccessMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AccessMode</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">READ</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$sessionConfig</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">withAccessMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">AccessMode</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">WRITE</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">startSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sessionConfig</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="171"/>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$session</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">readTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tsxHandler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTsxConfig</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="174"/>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">     * @template HandlerResult</token>
      </line>
      <line no="177">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="178">
        <token name="T_DOC_COMMENT">     * @param callable(SymfonyTransaction):HandlerResult $tsxHandler</token>
      </line>
      <line no="179">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="180">
        <token name="T_DOC_COMMENT">     * @return HandlerResult</token>
      </line>
      <line no="181">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">transaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsxHandler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">writeTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tsxHandler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="186"/>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verifyConnectivity</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$driver</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyConnectivity</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultSessionConfiguration</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$driver</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="191"/>
      <line no="192">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hasDriver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasDriver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="196"/>
      <line no="197">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bindTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE_EQUAL">??=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultAlias</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200"/>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE_EQUAL">??=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">beginTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="204"/>
      <line no="205">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rollbackBoundTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">popTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FN">fn</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">SymfonyTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsx</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsx</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rollback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="209"/>
      <line no="210">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="211">
        <token name="T_DOC_COMMENT">     * @param callable(SymfonyTransaction): void $handler</token>
      </line>
      <line no="212">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     * @psalm-suppress ImpureFunctionCall</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">popTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE_EQUAL">??=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">driverSetups</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDefaultAlias</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="218"/>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="222"/>
      <line no="223">
        <token name="T_WHITESPACE">        </token>
        <token name="T_WHILE">while</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$tsx</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_pop</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">boundTransactions</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tsx</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DEC">--</token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="229"/>
      <line no="230">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">commitBoundTransaction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">popTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FN">fn</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UnmanagedTransactionInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsx</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsx</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">commit</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="234"/>
      <line no="235">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getTsxConfig</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">TransactionConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TransactionConfiguration</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultTransactionConfiguration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="240"/>
      <line no="241">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">defaultTransactionConfiguration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="243">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="244"/>
    </source>
  </file>
</phpunit>
