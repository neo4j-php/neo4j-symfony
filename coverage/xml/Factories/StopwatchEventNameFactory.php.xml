<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="StopwatchEventNameFactory.php" path="/Factories">
    <totals>
      <lines total="42" comments="0" code="42" executable="16" executed="16" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory" start="7" executable="16" executed="16" crap="5">
      <namespace name="Neo4j\Neo4jBundle\Factories"/>
      <method name="__construct" signature="__construct()" start="9" end="11" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="createQueryEventName" signature="createQueryEventName(string $alias, ?string $transactionId): string" start="13" end="20" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="createTransactionEventName" signature="createTransactionEventName(string $alias, string $transactionId, Laudis\Neo4j\Enum\TransactionState $nextTransactionState): string" start="22" end="30" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="nextTransactionStateToAction" signature="nextTransactionStateToAction(Laudis\Neo4j\Enum\TransactionState $state): string" start="32" end="40" crap="1" executable="6" executed="6" coverage="100"/>
    </class>
    <coverage>
      <line nr="11">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testClient"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriver"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDsn"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDriverAuthentication"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultDriverConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultSessionConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultTransactionConfig"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testPriority"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\IntegrationTest::testDefaultLogLevel"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateQueryEventNameWithoutTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateQueryEventNameWithTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="15">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateQueryEventNameWithoutTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateQueryEventNameWithTransaction"/>
      </line>
      <line nr="16">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfiler"/>
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnSession"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateQueryEventNameWithoutTransaction"/>
      </line>
      <line nr="19">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateQueryEventNameWithTransaction"/>
      </line>
      <line nr="24">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="25">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="28">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="35">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="36">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="37">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="38">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="26">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="27">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="29">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="34">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
      <line nr="39">
        <covered by="Neo4j\Neo4jBundle\Tests\Functional\ProfilerTest::testProfilerOnTransaction"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #0"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #1"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #2"/>
        <covered by="Neo4j\Neo4jBundle\Tests\unit\Factories\StopwatchEventNameFactoryTest::testCreateTransactionEventName with data set #3"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Neo4j\Neo4jBundle\Factories</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Laudis\Neo4j\Enum\TransactionState</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">StopwatchEventNameFactory</token>
      </line>
      <line no="8">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createQueryEventName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$transactionId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$transactionId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'neo4j.%s.query'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'neo4j.%s.transaction.%s.query'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$transactionId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createTransactionEventName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$transactionId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TransactionState</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nextTransactionState</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'neo4j.%s.transaction.%s.%s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$transactionId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nextTransactionStateToAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nextTransactionState</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">nextTransactionStateToAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">TransactionState</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MATCH">match</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">TransactionState</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">COMMITTED</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'commit'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">TransactionState</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTIVE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'begin'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">TransactionState</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLLED_BACK</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rollback'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">TransactionState</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TERMINATED</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42"/>
    </source>
  </file>
</phpunit>
