<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2025-03-12 10:22:45</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>108</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>189.68</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Laudis\Neo4j\Databags\SessionConfiguration $defaultSessionConfig, Laudis\Neo4j\Databags\TransactionConfiguration $defaultTransactionConfig, Laudis\Neo4j\Common\DriverSetupManager $driverSetups, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $driverFactory)</methodSignature>
      <fullMethod>__construct(Laudis\Neo4j\Databags\SessionConfiguration $defaultSessionConfig, Laudis\Neo4j\Databags\TransactionConfiguration $defaultTransactionConfig, Laudis\Neo4j\Common\DriverSetupManager $driverSetups, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $driverFactory)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>withDriver</methodName>
      <methodSignature>withDriver(string $alias, string $url, ?Laudis\Neo4j\Contracts\AuthenticateInterface $authentication, ?int $priority): self</methodSignature>
      <fullMethod>withDriver(string $alias, string $url, ?Laudis\Neo4j\Contracts\AuthenticateInterface $authentication, ?int $priority): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>withParsedUrl</methodName>
      <methodSignature>withParsedUrl(string $alias, Laudis\Neo4j\Common\Uri $uri, Laudis\Neo4j\Contracts\AuthenticateInterface $authentication, int $priority): self</methodSignature>
      <fullMethod>withParsedUrl(string $alias, Laudis\Neo4j\Common\Uri $uri, Laudis\Neo4j\Contracts\AuthenticateInterface $authentication, int $priority): self</fullMethod>
      <crap>2.02</crap>
      <complexity>2</complexity>
      <coverage>83.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>withDefaultDriver</methodName>
      <methodSignature>withDefaultDriver(string $alias): self</methodSignature>
      <fullMethod>withDefaultDriver(string $alias): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>build</methodName>
      <methodSignature>build(): Neo4j\Neo4jBundle\Decorators\SymfonyClient</methodSignature>
      <fullMethod>build(): Neo4j\Neo4jBundle\Decorators\SymfonyClient</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>withDefaultDriverConfiguration</methodName>
      <methodSignature>withDefaultDriverConfiguration(Laudis\Neo4j\Databags\DriverConfiguration $config): self</methodSignature>
      <fullMethod>withDefaultDriverConfiguration(Laudis\Neo4j\Databags\DriverConfiguration $config): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>withDefaultSessionConfiguration</methodName>
      <methodSignature>withDefaultSessionConfiguration(Laudis\Neo4j\Databags\SessionConfiguration $config): self</methodSignature>
      <fullMethod>withDefaultSessionConfiguration(Laudis\Neo4j\Databags\SessionConfiguration $config): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Builders</package>
      <className>Neo4j\Neo4jBundle\Builders\ClientBuilder</className>
      <methodName>withDefaultTransactionConfiguration</methodName>
      <methodSignature>withDefaultTransactionConfiguration(Laudis\Neo4j\Databags\TransactionConfiguration $config): self</methodSignature>
      <fullMethod>withDefaultTransactionConfiguration(Laudis\Neo4j\Databags\TransactionConfiguration $config): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener $subscriber)</methodSignature>
      <fullMethod>__construct(Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener $subscriber)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>collect</methodName>
      <methodSignature>collect(Symfony\Component\HttpFoundation\Request $request, Symfony\Component\HttpFoundation\Response $response, ?Throwable $exception): void</methodSignature>
      <fullMethod>collect(Symfony\Component\HttpFoundation\Request $request, Symfony\Component\HttpFoundation\Response $response, ?Throwable $exception): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>reset</methodName>
      <methodSignature>reset(): void</methodSignature>
      <fullMethod>reset(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getName</methodName>
      <methodSignature>getName(): string</methodSignature>
      <fullMethod>getName(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getStatements</methodName>
      <methodSignature>getStatements(): array</methodSignature>
      <fullMethod>getStatements(): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getSuccessfulStatements</methodName>
      <methodSignature>getSuccessfulStatements(): array</methodSignature>
      <fullMethod>getSuccessfulStatements(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getFailedStatements</methodName>
      <methodSignature>getFailedStatements(): array</methodSignature>
      <fullMethod>getFailedStatements(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getFailedStatementsCount</methodName>
      <methodSignature>getFailedStatementsCount(): array</methodSignature>
      <fullMethod>getFailedStatementsCount(): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getSuccessfulStatementsCount</methodName>
      <methodSignature>getSuccessfulStatementsCount(): array</methodSignature>
      <fullMethod>getSuccessfulStatementsCount(): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getQueryCount</methodName>
      <methodSignature>getQueryCount(): int</methodSignature>
      <fullMethod>getQueryCount(): int</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>getTemplate</methodName>
      <methodSignature>getTemplate(): ?string</methodSignature>
      <fullMethod>getTemplate(): ?string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Collector</package>
      <className>Neo4j\Neo4jBundle\Collector\Neo4jDataCollector</className>
      <methodName>recursiveToArray</methodName>
      <methodSignature>recursiveToArray(mixed $obj): mixed</methodSignature>
      <fullMethod>recursiveToArray(mixed $obj): mixed</fullMethod>
      <crap>7.91</crap>
      <complexity>4</complexity>
      <coverage>37.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Laudis\Neo4j\Common\DriverSetupManager $driverSetups, Laudis\Neo4j\Databags\SessionConfiguration $defaultSessionConfiguration, Laudis\Neo4j\Databags\TransactionConfiguration $defaultTransactionConfiguration, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory)</methodSignature>
      <fullMethod>__construct(Laudis\Neo4j\Common\DriverSetupManager $driverSetups, Laudis\Neo4j\Databags\SessionConfiguration $defaultSessionConfiguration, Laudis\Neo4j\Databags\TransactionConfiguration $defaultTransactionConfiguration, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>getDefaultSessionConfiguration</methodName>
      <methodSignature>getDefaultSessionConfiguration(): Laudis\Neo4j\Databags\SessionConfiguration</methodSignature>
      <fullMethod>getDefaultSessionConfiguration(): Laudis\Neo4j\Databags\SessionConfiguration</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>getDefaultTransactionConfiguration</methodName>
      <methodSignature>getDefaultTransactionConfiguration(): Laudis\Neo4j\Databags\TransactionConfiguration</methodSignature>
      <fullMethod>getDefaultTransactionConfiguration(): Laudis\Neo4j\Databags\TransactionConfiguration</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>run</methodName>
      <methodSignature>run(string $statement, iterable $parameters, ?string $alias): Laudis\Neo4j\Databags\SummarizedResult</methodSignature>
      <fullMethod>run(string $statement, iterable $parameters, ?string $alias): Laudis\Neo4j\Databags\SummarizedResult</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>runStatement</methodName>
      <methodSignature>runStatement(Laudis\Neo4j\Databags\Statement $statement, ?string $alias): Laudis\Neo4j\Databags\SummarizedResult</methodSignature>
      <fullMethod>runStatement(Laudis\Neo4j\Databags\Statement $statement, ?string $alias): Laudis\Neo4j\Databags\SummarizedResult</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>getRunner</methodName>
      <methodSignature>getRunner(?string $alias): \Neo4j\Neo4jBundle\Decorators\SymfonyTransaction|\Neo4j\Neo4jBundle\Decorators\SymfonySession</methodSignature>
      <fullMethod>getRunner(?string $alias): \Neo4j\Neo4jBundle\Decorators\SymfonyTransaction|\Neo4j\Neo4jBundle\Decorators\SymfonySession</fullMethod>
      <crap>3.07</crap>
      <complexity>3</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>getSession</methodName>
      <methodSignature>getSession(?string $alias): Neo4j\Neo4jBundle\Decorators\SymfonySession</methodSignature>
      <fullMethod>getSession(?string $alias): Neo4j\Neo4jBundle\Decorators\SymfonySession</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>runStatements</methodName>
      <methodSignature>runStatements(iterable $statements, ?string $alias): Laudis\Neo4j\Types\CypherList</methodSignature>
      <fullMethod>runStatements(iterable $statements, ?string $alias): Laudis\Neo4j\Types\CypherList</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>beginTransaction</methodName>
      <methodSignature>beginTransaction(?iterable $statements, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</methodSignature>
      <fullMethod>beginTransaction(?iterable $statements, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>getDriver</methodName>
      <methodSignature>getDriver(?string $alias): Neo4j\Neo4jBundle\Decorators\SymfonyDriver</methodSignature>
      <fullMethod>getDriver(?string $alias): Neo4j\Neo4jBundle\Decorators\SymfonyDriver</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>startSession</methodName>
      <methodSignature>startSession(?string $alias, Laudis\Neo4j\Databags\SessionConfiguration $configuration): Neo4j\Neo4jBundle\Decorators\SymfonySession</methodSignature>
      <fullMethod>startSession(?string $alias, Laudis\Neo4j\Databags\SessionConfiguration $configuration): Neo4j\Neo4jBundle\Decorators\SymfonySession</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>writeTransaction</methodName>
      <methodSignature>writeTransaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): mixed</methodSignature>
      <fullMethod>writeTransaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): mixed</fullMethod>
      <crap>2.26</crap>
      <complexity>2</complexity>
      <coverage>60</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>readTransaction</methodName>
      <methodSignature>readTransaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): mixed</methodSignature>
      <fullMethod>readTransaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): mixed</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>transaction</methodName>
      <methodSignature>transaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</methodSignature>
      <fullMethod>transaction(callable $tsxHandler, ?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>verifyConnectivity</methodName>
      <methodSignature>verifyConnectivity(?string $driver): bool</methodSignature>
      <fullMethod>verifyConnectivity(?string $driver): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>hasDriver</methodName>
      <methodSignature>hasDriver(string $alias): bool</methodSignature>
      <fullMethod>hasDriver(string $alias): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>bindTransaction</methodName>
      <methodSignature>bindTransaction(?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): void</methodSignature>
      <fullMethod>bindTransaction(?string $alias, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>rollbackBoundTransaction</methodName>
      <methodSignature>rollbackBoundTransaction(?string $alias, int $depth): void</methodSignature>
      <fullMethod>rollbackBoundTransaction(?string $alias, int $depth): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>popTransactions</methodName>
      <methodSignature>popTransactions(callable $handler, ?string $alias, int $depth): void</methodSignature>
      <fullMethod>popTransactions(callable $handler, ?string $alias, int $depth): void</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>commitBoundTransaction</methodName>
      <methodSignature>commitBoundTransaction(?string $alias, int $depth): void</methodSignature>
      <fullMethod>commitBoundTransaction(?string $alias, int $depth): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyClient</className>
      <methodName>getTsxConfig</methodName>
      <methodSignature>getTsxConfig(?Laudis\Neo4j\Databags\TransactionConfiguration $config): Laudis\Neo4j\Databags\TransactionConfiguration</methodSignature>
      <fullMethod>getTsxConfig(?Laudis\Neo4j\Databags\TransactionConfiguration $config): Laudis\Neo4j\Databags\TransactionConfiguration</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyDriver</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Laudis\Neo4j\Basic\Driver $driver, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory, string $alias, string $schema)</methodSignature>
      <fullMethod>__construct(Laudis\Neo4j\Basic\Driver $driver, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory, string $alias, string $schema)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyDriver</className>
      <methodName>createSession</methodName>
      <methodSignature>createSession(?Laudis\Neo4j\Databags\SessionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonySession</methodSignature>
      <fullMethod>createSession(?Laudis\Neo4j\Databags\SessionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonySession</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyDriver</className>
      <methodName>verifyConnectivity</methodName>
      <methodSignature>verifyConnectivity(?Laudis\Neo4j\Databags\SessionConfiguration $config): bool</methodSignature>
      <fullMethod>verifyConnectivity(?Laudis\Neo4j\Databags\SessionConfiguration $config): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyDriver</className>
      <methodName>closeConnections</methodName>
      <methodSignature>closeConnections(): void</methodSignature>
      <fullMethod>closeConnections(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Laudis\Neo4j\Basic\Session $session, Neo4j\Neo4jBundle\EventHandler $handler, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory, string $alias, string $schema)</methodSignature>
      <fullMethod>__construct(Laudis\Neo4j\Basic\Session $session, Neo4j\Neo4jBundle\EventHandler $handler, Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory $factory, string $alias, string $schema)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>runStatements</methodName>
      <methodSignature>runStatements(iterable $statements, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Laudis\Neo4j\Types\CypherList</methodSignature>
      <fullMethod>runStatements(iterable $statements, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Laudis\Neo4j\Types\CypherList</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>runStatement</methodName>
      <methodSignature>runStatement(Laudis\Neo4j\Databags\Statement $statement, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</methodSignature>
      <fullMethod>runStatement(Laudis\Neo4j\Databags\Statement $statement, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>run</methodName>
      <methodSignature>run(string $statement, iterable $parameters, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</methodSignature>
      <fullMethod>run(string $statement, iterable $parameters, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>beginTransaction</methodName>
      <methodSignature>beginTransaction(?iterable $statements, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</methodSignature>
      <fullMethod>beginTransaction(?iterable $statements, ?Laudis\Neo4j\Databags\TransactionConfiguration $config): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>writeTransaction</methodName>
      <methodSignature>writeTransaction(callable $tsxHandler, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</methodSignature>
      <fullMethod>writeTransaction(callable $tsxHandler, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>readTransaction</methodName>
      <methodSignature>readTransaction(callable $tsxHandler, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</methodSignature>
      <fullMethod>readTransaction(callable $tsxHandler, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>transaction</methodName>
      <methodSignature>transaction(callable $tsxHandler, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</methodSignature>
      <fullMethod>transaction(callable $tsxHandler, ?Laudis\Neo4j\Databags\TransactionConfiguration $config)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonySession</className>
      <methodName>getLastBookmark</methodName>
      <methodSignature>getLastBookmark(): Laudis\Neo4j\Databags\Bookmark</methodSignature>
      <fullMethod>getLastBookmark(): Laudis\Neo4j\Databags\Bookmark</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Laudis\Neo4j\Contracts\UnmanagedTransactionInterface $tsx, Neo4j\Neo4jBundle\EventHandler $handler, string $alias, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(Laudis\Neo4j\Contracts\UnmanagedTransactionInterface $tsx, Neo4j\Neo4jBundle\EventHandler $handler, string $alias, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>run</methodName>
      <methodSignature>run(string $statement, iterable $parameters): Laudis\Neo4j\Databags\SummarizedResult</methodSignature>
      <fullMethod>run(string $statement, iterable $parameters): Laudis\Neo4j\Databags\SummarizedResult</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>runStatement</methodName>
      <methodSignature>runStatement(Laudis\Neo4j\Databags\Statement $statement): Laudis\Neo4j\Databags\SummarizedResult</methodSignature>
      <fullMethod>runStatement(Laudis\Neo4j\Databags\Statement $statement): Laudis\Neo4j\Databags\SummarizedResult</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>runStatements</methodName>
      <methodSignature>runStatements(iterable $statements): Laudis\Neo4j\Types\CypherList</methodSignature>
      <fullMethod>runStatements(iterable $statements): Laudis\Neo4j\Types\CypherList</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>commit</methodName>
      <methodSignature>commit(iterable $statements): Laudis\Neo4j\Types\CypherList</methodSignature>
      <fullMethod>commit(iterable $statements): Laudis\Neo4j\Types\CypherList</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>rollback</methodName>
      <methodSignature>rollback(): void</methodSignature>
      <fullMethod>rollback(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>isRolledBack</methodName>
      <methodSignature>isRolledBack(): bool</methodSignature>
      <fullMethod>isRolledBack(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>isCommitted</methodName>
      <methodSignature>isCommitted(): bool</methodSignature>
      <fullMethod>isCommitted(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Decorators</package>
      <className>Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</className>
      <methodName>isFinished</methodName>
      <methodSignature>isFinished(): bool</methodSignature>
      <fullMethod>isFinished(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Configuration</className>
      <methodName>getConfigTreeBuilder</methodName>
      <methodSignature>getConfigTreeBuilder(): Symfony\Component\Config\Definition\Builder\TreeBuilder</methodSignature>
      <fullMethod>getConfigTreeBuilder(): Symfony\Component\Config\Definition\Builder\TreeBuilder</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Configuration</className>
      <methodName>decorateSessionConfig</methodName>
      <methodSignature>decorateSessionConfig(): Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition</methodSignature>
      <fullMethod>decorateSessionConfig(): Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Configuration</className>
      <methodName>decorateDriverConfig</methodName>
      <methodSignature>decorateDriverConfig(): Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition</methodSignature>
      <fullMethod>decorateDriverConfig(): Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Configuration</className>
      <methodName>decorateTransactionConfig</methodName>
      <methodSignature>decorateTransactionConfig(): Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition</methodSignature>
      <fullMethod>decorateTransactionConfig(): Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Neo4jExtension</className>
      <methodName>load</methodName>
      <methodSignature>load(array $configs, Symfony\Component\DependencyInjection\ContainerBuilder $container): Symfony\Component\DependencyInjection\ContainerBuilder</methodSignature>
      <fullMethod>load(array $configs, Symfony\Component\DependencyInjection\ContainerBuilder $container): Symfony\Component\DependencyInjection\ContainerBuilder</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Neo4jExtension</className>
      <methodName>getConfiguration</methodName>
      <methodSignature>getConfiguration(array $config, Symfony\Component\DependencyInjection\ContainerBuilder $container): Neo4j\Neo4jBundle\DependencyInjection\Configuration</methodSignature>
      <fullMethod>getConfiguration(array $config, Symfony\Component\DependencyInjection\ContainerBuilder $container): Neo4j\Neo4jBundle\DependencyInjection\Configuration</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\DependencyInjection</package>
      <className>Neo4j\Neo4jBundle\DependencyInjection\Neo4jExtension</className>
      <methodName>getAlias</methodName>
      <methodSignature>getAlias(): string</methodSignature>
      <fullMethod>getAlias(): string</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event</package>
      <className>Neo4j\Neo4jBundle\Event\FailureEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(?string $alias, ?Laudis\Neo4j\Databags\Statement $statement, Laudis\Neo4j\Exception\Neo4jException $exception, DateTimeInterface $time, ?string $scheme, ?string $transactionId)</methodSignature>
      <fullMethod>__construct(?string $alias, ?Laudis\Neo4j\Databags\Statement $statement, Laudis\Neo4j\Exception\Neo4jException $exception, DateTimeInterface $time, ?string $scheme, ?string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event</package>
      <className>Neo4j\Neo4jBundle\Event\FailureEvent</className>
      <methodName>disableException</methodName>
      <methodSignature>disableException(): void</methodSignature>
      <fullMethod>disableException(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event</package>
      <className>Neo4j\Neo4jBundle\Event\PostRunEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(?string $alias, Laudis\Neo4j\Databags\ResultSummary $result, DateTimeInterface $time, ?string $scheme, ?string $transactionId)</methodSignature>
      <fullMethod>__construct(?string $alias, Laudis\Neo4j\Databags\ResultSummary $result, DateTimeInterface $time, ?string $scheme, ?string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event</package>
      <className>Neo4j\Neo4jBundle\Event\PreRunEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(?string $alias, Laudis\Neo4j\Databags\Statement $statement, DateTimeInterface $time, ?string $scheme, ?string $transactionId)</methodSignature>
      <fullMethod>__construct(?string $alias, Laudis\Neo4j\Databags\Statement $statement, DateTimeInterface $time, ?string $scheme, ?string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event\Transaction</package>
      <className>Neo4j\Neo4jBundle\Event\Transaction\PostTransactionBeginEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event\Transaction</package>
      <className>Neo4j\Neo4jBundle\Event\Transaction\PostTransactionCommitEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event\Transaction</package>
      <className>Neo4j\Neo4jBundle\Event\Transaction\PostTransactionRollbackEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event\Transaction</package>
      <className>Neo4j\Neo4jBundle\Event\Transaction\PreTransactionBeginEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event\Transaction</package>
      <className>Neo4j\Neo4jBundle\Event\Transaction\PreTransactionCommitEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Event\Transaction</package>
      <className>Neo4j\Neo4jBundle\Event\Transaction\PreTransactionRollbackEvent</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</methodSignature>
      <fullMethod>__construct(string $alias, DateTimeInterface $time, string $scheme, string $transactionId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle</package>
      <className>Neo4j\Neo4jBundle\EventHandler</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(?Symfony\Contracts\EventDispatcher\EventDispatcherInterface $dispatcher, ?Symfony\Component\Stopwatch\Stopwatch $stopwatch, Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory $nameFactory)</methodSignature>
      <fullMethod>__construct(?Symfony\Contracts\EventDispatcher\EventDispatcherInterface $dispatcher, ?Symfony\Component\Stopwatch\Stopwatch $stopwatch, Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory $nameFactory)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle</package>
      <className>Neo4j\Neo4jBundle\EventHandler</className>
      <methodName>handleQuery</methodName>
      <methodSignature>handleQuery(callable $runHandler, Laudis\Neo4j\Databags\Statement $statement, string $alias, string $scheme, ?string $transactionId): Laudis\Neo4j\Databags\SummarizedResult</methodSignature>
      <fullMethod>handleQuery(callable $runHandler, Laudis\Neo4j\Databags\Statement $statement, string $alias, string $scheme, ?string $transactionId): Laudis\Neo4j\Databags\SummarizedResult</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle</package>
      <className>Neo4j\Neo4jBundle\EventHandler</className>
      <methodName>handleTransactionAction</methodName>
      <methodSignature>handleTransactionAction(Laudis\Neo4j\Enum\TransactionState $nextTransactionState, string $transactionId, callable $runHandler, string $alias, string $scheme): mixed</methodSignature>
      <fullMethod>handleTransactionAction(Laudis\Neo4j\Enum\TransactionState $nextTransactionState, string $transactionId, callable $runHandler, string $alias, string $scheme): mixed</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle</package>
      <className>Neo4j\Neo4jBundle\EventHandler</className>
      <methodName>handleAction</methodName>
      <methodSignature>handleAction(callable $runHandler, string $alias, string $scheme, string $stopwatchName, ?string $transactionId, ?Laudis\Neo4j\Databags\Statement $statement): mixed</methodSignature>
      <fullMethod>handleAction(callable $runHandler, string $alias, string $scheme, string $stopwatchName, ?string $transactionId, ?Laudis\Neo4j\Databags\Statement $statement): mixed</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle</package>
      <className>Neo4j\Neo4jBundle\EventHandler</className>
      <methodName>createPreAndPostEventsAndIds</methodName>
      <methodSignature>createPreAndPostEventsAndIds(Laudis\Neo4j\Enum\TransactionState $nextTransactionState, string $alias, string $scheme, string $transactionId): array</methodSignature>
      <fullMethod>createPreAndPostEventsAndIds(Laudis\Neo4j\Enum\TransactionState $nextTransactionState, string $alias, string $scheme, string $transactionId): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(array $enabledProfiles)</methodSignature>
      <fullMethod>__construct(array $enabledProfiles)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>getSubscribedEvents</methodName>
      <methodSignature>getSubscribedEvents(): array</methodSignature>
      <fullMethod>getSubscribedEvents(): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>onPostRun</methodName>
      <methodSignature>onPostRun(Neo4j\Neo4jBundle\Event\PostRunEvent $event): void</methodSignature>
      <fullMethod>onPostRun(Neo4j\Neo4jBundle\Event\PostRunEvent $event): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>onFailure</methodName>
      <methodSignature>onFailure(Neo4j\Neo4jBundle\Event\FailureEvent $event): void</methodSignature>
      <fullMethod>onFailure(Neo4j\Neo4jBundle\Event\FailureEvent $event): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>getProfiledSummaries</methodName>
      <methodSignature>getProfiledSummaries(): array</methodSignature>
      <fullMethod>getProfiledSummaries(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>getProfiledFailures</methodName>
      <methodSignature>getProfiledFailures(): array</methodSignature>
      <fullMethod>getProfiledFailures(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\EventListener</package>
      <className>Neo4j\Neo4jBundle\EventListener\Neo4jProfileListener</className>
      <methodName>reset</methodName>
      <methodSignature>reset(): void</methodSignature>
      <fullMethod>reset(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(?array $driverConfig, ?array $sessionConfig, ?array $transactionConfig, array $connections, ?string $defaultDriver, ?Psr\Http\Client\ClientInterface $client, ?Psr\Http\Message\StreamFactoryInterface $streamFactory, ?Psr\Http\Message\RequestFactoryInterface $requestFactory, ?string $logLevel, ?Psr\Log\LoggerInterface $logger, Neo4j\Neo4jBundle\Builders\ClientBuilder $builder)</methodSignature>
      <fullMethod>__construct(?array $driverConfig, ?array $sessionConfig, ?array $transactionConfig, array $connections, ?string $defaultDriver, ?Psr\Http\Client\ClientInterface $client, ?Psr\Http\Message\StreamFactoryInterface $streamFactory, ?Psr\Http\Message\RequestFactoryInterface $requestFactory, ?string $logLevel, ?Psr\Log\LoggerInterface $logger, Neo4j\Neo4jBundle\Builders\ClientBuilder $builder)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>create</methodName>
      <methodSignature>create(): Neo4j\Neo4jBundle\Decorators\SymfonyClient</methodSignature>
      <fullMethod>create(): Neo4j\Neo4jBundle\Decorators\SymfonyClient</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>makeDriverConfig</methodName>
      <methodSignature>makeDriverConfig(?string $logLevel, ?Psr\Log\LoggerInterface $logger): Laudis\Neo4j\Databags\DriverConfiguration</methodSignature>
      <fullMethod>makeDriverConfig(?string $logLevel, ?Psr\Log\LoggerInterface $logger): Laudis\Neo4j\Databags\DriverConfiguration</fullMethod>
      <crap>4.06</crap>
      <complexity>4</complexity>
      <coverage>84.21</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>makeSessionConfig</methodName>
      <methodSignature>makeSessionConfig(): Laudis\Neo4j\Databags\SessionConfiguration</methodSignature>
      <fullMethod>makeSessionConfig(): Laudis\Neo4j\Databags\SessionConfiguration</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>makeTransactionConfig</methodName>
      <methodSignature>makeTransactionConfig(): Laudis\Neo4j\Databags\TransactionConfiguration</methodSignature>
      <fullMethod>makeTransactionConfig(): Laudis\Neo4j\Databags\TransactionConfiguration</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>createAuth</methodName>
      <methodSignature>createAuth(?array $auth, string $dsn): Laudis\Neo4j\Contracts\AuthenticateInterface</methodSignature>
      <fullMethod>createAuth(?array $auth, string $dsn): Laudis\Neo4j\Contracts\AuthenticateInterface</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\ClientFactory</className>
      <methodName>makeSslConfig</methodName>
      <methodSignature>makeSslConfig(?array $ssl): Laudis\Neo4j\Databags\SslConfiguration</methodSignature>
      <fullMethod>makeSslConfig(?array $ssl): Laudis\Neo4j\Databags\SslConfiguration</fullMethod>
      <crap>2.09</crap>
      <complexity>2</complexity>
      <coverage>71.43</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory</className>
      <methodName>createQueryEventName</methodName>
      <methodSignature>createQueryEventName(string $alias, ?string $transactionId): string</methodSignature>
      <fullMethod>createQueryEventName(string $alias, ?string $transactionId): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory</className>
      <methodName>createTransactionEventName</methodName>
      <methodSignature>createTransactionEventName(string $alias, string $transactionId, Laudis\Neo4j\Enum\TransactionState $nextTransactionState): string</methodSignature>
      <fullMethod>createTransactionEventName(string $alias, string $transactionId, Laudis\Neo4j\Enum\TransactionState $nextTransactionState): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\StopwatchEventNameFactory</className>
      <methodName>nextTransactionStateToAction</methodName>
      <methodSignature>nextTransactionStateToAction(Laudis\Neo4j\Enum\TransactionState $state): string</methodSignature>
      <fullMethod>nextTransactionStateToAction(Laudis\Neo4j\Enum\TransactionState $state): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Neo4j\Neo4jBundle\EventHandler $handler, ?Symfony\Component\Uid\Factory\UuidFactory $uuidFactory)</methodSignature>
      <fullMethod>__construct(Neo4j\Neo4jBundle\EventHandler $handler, ?Symfony\Component\Uid\Factory\UuidFactory $uuidFactory)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory</className>
      <methodName>createTransaction</methodName>
      <methodSignature>createTransaction(Laudis\Neo4j\Basic\Session $session, ?Laudis\Neo4j\Databags\TransactionConfiguration $config, string $alias, string $schema): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</methodSignature>
      <fullMethod>createTransaction(Laudis\Neo4j\Basic\Session $session, ?Laudis\Neo4j\Databags\TransactionConfiguration $config, string $alias, string $schema): Neo4j\Neo4jBundle\Decorators\SymfonyTransaction</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory</className>
      <methodName>createSession</methodName>
      <methodSignature>createSession(Laudis\Neo4j\Basic\Driver $driver, ?Laudis\Neo4j\Databags\SessionConfiguration $config, string $alias, string $schema): Neo4j\Neo4jBundle\Decorators\SymfonySession</methodSignature>
      <fullMethod>createSession(Laudis\Neo4j\Basic\Driver $driver, ?Laudis\Neo4j\Databags\SessionConfiguration $config, string $alias, string $schema): Neo4j\Neo4jBundle\Decorators\SymfonySession</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory</className>
      <methodName>createDriver</methodName>
      <methodSignature>createDriver(Laudis\Neo4j\Basic\Driver $driver, string $alias, string $schema): Neo4j\Neo4jBundle\Decorators\SymfonyDriver</methodSignature>
      <fullMethod>createDriver(Laudis\Neo4j\Basic\Driver $driver, string $alias, string $schema): Neo4j\Neo4jBundle\Decorators\SymfonyDriver</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Neo4j\Neo4jBundle\Factories</package>
      <className>Neo4j\Neo4jBundle\Factories\SymfonyDriverFactory</className>
      <methodName>generateTransactionId</methodName>
      <methodSignature>generateTransactionId(): string</methodSignature>
      <fullMethod>generateTransactionId(): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
